glob int startDate
glob int endDate
glob int fundCloseDate
glob int goal
glob address receiver

glob mut int total_funds
loc mut int donated_amount

Create crowdfund(int startDate, int endDate, int fundCloseDate, int goal, address receiver) {
	glob.startDate = startDate
	glob.endDate = endDate
	glob.fundCloseDate = fundCloseDate
	glob.goal = goal
	glob.receiver = receiver 
	glob.total_funds = 0
}

OptIn optin() {
	loc.donated_amount = 0
}

@round (glob.startDate, glob.endDate)
@pay $donated of ALGO : * -> escrow
donate() {
	glob.total_funds += donated
	loc.donated_amount += donated
}

@assert glob.total_funds < glob.goal
@round (glob.endDate, )
@pay (, loc.donated_amount)$reclaimed of ALGO : escrow -> caller
reclaim() {
	glob.total_funds -= reclaimed
	loc.donated_amount -= reclaimed
}
		
@assert glob.total_funds >= glob.goal
@round (glob.endDate, )
@pay glob.total_funds of ALGO : escrow -> glob.receiver
claim() {
	glob.total_funds = 0
}

@assert glob.total_funds < glob.goal
@round (glob.fundCloseDate, )
@close ALGO : escrow -> creator
@from creator
Delete delete() {}