glob int end_bidding     // end of the bidding period
glob int end_reveal      // end of the reveal period
glob int end_redeem      // end of the redeem period

glob int highest_bid
glob address winner

loc string sealed_bid
loc int deposit
loc int bid
loc bool can_redeem

/******************************
 Contract creation
 ******************************/

@assert end_bidding < end_reveal
@assert end_reveal < end_redeem
@newtok 1 of NFT -> escrow
Create auction(int end_bidding, int end_reveal, int end_redeem) {
    glob.highest_bid = 0
    glob.end_bidding = end_bidding
    glob.end_reveal = end_reveal
    glob.end_redeem = end_redeem
}

/******************************
 Bidding
 ******************************/

@round (,glob.end_bidding)
@pay $v of ALGO : caller -> escrow
Optin bid(string sealed_bid) {
    loc.sealed_bid = sealed_bid
    loc.deposit = v
    loc.can_redeem = false
}

/******************************
 Revealing the bids
 ******************************/

@round (glob.end_bidding,glob.end_reveal)
@assert sha256(bid) == caller.sealed_bid
@assert len(bid) = 32 + 2
@assert get_int(substring(bid,32,34)) > glob.highest_bid
@assert get_int(substring(bid,32,34)) <= caller.deposit
reveal(string bid) {
    glob.highest_bid = get_int(substring(bid,32,34))
    glob.winner = caller
}

@round (glob.end_bidding,glob.end_reveal)
@assert sha256(bid) == caller.sealed_bid
@assert len(bid) = 32 + 2
@assert get_int(substring(bid,32,34)) < glob.highest_bid
@assert get_int(substring(bid,32,34)) <= caller.deposit
reveal(string bid) {
    loc.can_redeem = true
}

/******************************
 Redeeming the NFT 
 ******************************/

@round (glob.end_reveal,glob.end_redeem)
@pay caller.deposit - glob.highest_bid of ALGO : escrow -> glob.winner
@pay 1 of NFT : escrow -> glob.winner
redeem() { 
    caller.deposit = 0
}


/******************************
 Redeeming the deposits
 ******************************/

@round (glob.end_reveal,glob.end_redeem)
@assert caller.can_redeem
@pay caller.deposit of ALGO : escrow -> caller
redeem() {
    caller.deposit = 0
    caller.can_redeem = false
}


/******************************
 Deleting the contract
 ******************************/

@round (glob.end_redeem,)
@from creator
@close ALGO : escrow -> creator
@close NFT : escrow -> creator
Delete delete() {}
